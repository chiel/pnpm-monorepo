on:
  push:
    branches:
      - "**"

env:
  COMMIT_AUTHOR_EMAIL: chiel@kunkels.me
  COMMIT_AUTHOR_NAME: Chiel Kunkels

jobs:
  install:
    name: Install dependencies
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        id: cache
        with:
          key: node-modules-${{ runner.os }}-${{ hashFiles('pnpm-lock.yaml') }}
          path: node_modules
      - uses: actions/setup-node@v3
        if: steps.cache.outputs.cache-hit != 'true'
        with:
          node-version: 16
      - uses: pnpm/action-setup@v2.2.2
        if: steps.cache.outputs.cache-hit != 'true'
        with:
          run_install: true
          version: 7

  changed:
    name: Version changed packages
    runs-on: ubuntu-latest
    needs:
      - install
    outputs:
      matrices: ${{ steps.matrices.outputs.matrices }}
      packages: ${{ steps.packages.outputs.packages }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/cache@v3
        with:
          key: node-modules-${{ runner.os }}-${{ hashFiles('pnpm-lock.yaml') }}
          path: node_modules
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Get changed packages
        id: packages
        run: echo "::set-output name=packages ::$((node_modules/.bin/lerna changed --loglevel silent || true) | paste -sd, -)"
      - name: Generate matrices of jobs for changed packages
        if: steps.packages.outputs.packages != null
        id: matrices
        run: echo "::set-output name=matrices ::$(./.github/scripts/get_job_matrices ${{ steps.packages.outputs.packages }})"
      - name: Version changed packages
        if: steps.packages.outputs.packages != null
        run: node_modules/.bin/lerna version --no-git-tag-version --no-push
      - name: Upload version artifacts
        if: steps.packages.outputs.packages != null
        uses: actions/upload-artifact@v3
        with:
          name: version-artifacts
          path: packages/*/package.json

  packages-build:
    name: Build changed packages
    runs-on: ubuntu-latest
    needs:
      - changed
      - install
    if: needs.changed.outputs.packages != null
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        id: cache
        with:
          key: node-modules-${{ runner.os }}-${{ hashFiles('pnpm-lock.yaml') }}
          path: node_modules
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - uses: actions/download-artifact@v3
        with:
          name: version-artifacts
          path: packages
      - name: Build changed packages
        run: node_modules/.bin/lerna run build --scope={,${{ needs.changed.outputs.packages }}} --include-dependencies
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: packages/*/dist

  publish:
    name: Publish
    runs-on: ubuntu-latest
    needs:
      - changed
      - packages-build
    if: |
      always() &&
      github.ref == 'refs/heads/master' &&
      needs.changed.outputs.packages != null &&
      needs.packages-build.result == 'success'
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/cache@v3
        with:
          key: node-modules-${{ runner.os }}-${{ hashFiles('pnpm-lock.yaml') }}
          path: node_modules
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - uses: actions/download-artifact@v3
        with:
          name: build-artifacts
          path: packages
      - name: Configure CI git user
        run: |
          git config --global user.email "${{ env.COMMIT_AUTHOR_EMAIL }}"
          git config --global user.name "${{ env.COMMIT_AUTHOR_NAME }}"
      - name: Version and commit packages
        run: node_modules/.bin/lerna version
      - name: Set GitHub Packages auth token
        run: |
          echo '//npm.pkg.github.com/:_authToken=${{ secrets.GITHUB_TOKEN }}' >> .npmrc
          git update-index --assume-unchanged .npmrc
      - name: Publish packages
        run: node_modules/.bin/lerna publish from-git --no-verify-access
